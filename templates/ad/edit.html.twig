{% extends "base.html.twig" %}

{% block title %}Edition d'une annonce{% endblock %}
{% form_theme form _self %}
{% block body %}
    <div class="container">
        <h1>Modifier l'annonce : {{ ad.title }}</h1>

        {{ form_start(form) }}
        {{ form_widget(form) }}
        <button type="submit" class="btn btn-primary">Modifier l'annonce</button>
        {{ form_end(form) }}
    </div>
{% endblock %}

{% block _ad_images_widget %}
    <p>Ici, vous pouvez ajouter vos propres images !</p>

    {{ form_widget(form) }}
    <input type="hidden" id="widgets-counter" value="0">

    <div class="form-group">
        <button type="button" id="add-image" class="btn btn-primary">Ajouter image</button>
    </div>
{% endblock %}

{% block _ad_images_entry_row %}
    {{ form_widget(form) }}
{% endblock %}

{% block _ad_images_entry_widget %}
    <div class="form-group" id="block_{{id}}">
        <div class="row">
            <div class="col-10">
                <div class="row">
                    <div class="col">
                        {{ form_widget(form.url) }}
                    </div>
                    <div class="col">
                        {{ form_widget(form.caption) }}
                    </div>
                </div>
            </div>
            <div class="col-2">
                <button type="button" data-action="delete" data-target="#block_{{id}}" class="btn btn-danger">X</button>
            </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    <script>
        document.getElementById('add-image').addEventListener('click', () => { 
            // Récupération des futurs champs a créer.
            const widgetsCounter = document.getElementById('widgets-counter');
            const index = parseInt(widgetsCounter.value);

            // Récupérer le prototype des entrées.
            const adImage = document.getElementById('ad_images');
            const tmpl = adImage.dataset.prototype.replace(/__name__/g, index);

            adImage.insertAdjacentHTML('beforeend', tmpl);
            widgetsCounter.value = index + 1;
            // gestion du bouton supprimer
            handleDeleteButtons();
        });

        function handleDeleteButtons()
        {
            [...document.querySelectorAll('button[data-action="delete"]')].forEach(button => {
                button.addEventListener('click', el => {
                    const target = el.target.dataset.target;
                    document.querySelector(target).remove();
                });
            });
        }

        handleDeleteButtons();
    </script>
{% endblock %}